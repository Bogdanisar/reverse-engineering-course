break *vuln + 0x50
run
info b
run
info b
break *vuln + 0x50
run
kill
run
kill
run
kill
run
kill
run
kil
asd
run
p (int)(spawn_shell - vuln)
p (int)(spawn_shell - vuln)
aslr on
aslr
kill
break *vuln + 0x50
aslr on
aslr
run
p (int)(spawn_shell - vuln)
p (int)(spawn_shell - vuln), 2
p (int)(spawn_shell - vuln), 2, 3
p (int)(spawn_shell - vuln); 2; 3
p {(int)(spawn_shell - vuln), 2}
p { (int)spawn_shell, (int)vuln, (int)(spawn_shell - vuln) }
kill
run
p { (int)spawn_shell, (int)vuln, (int)(spawn_shell - vuln) }
p $rsp
p (int)$rsp
p (int64_t)$rsp
p (void *)$rsp
p { (void *)$rsp, vuln, $rsp - vuln }
p { (int64_t)$rsp, (int64_t)vuln, (int64_t)($rsp - vuln) }
p vuln
p spawn_shell
p *$rsp
p *(void**)$rsp
p { (int64_t)*(void**)$rsp, (int64_t)vuln, (int64_t)(*(void**)$rsp - vuln) }
p { (int64_t)*(void**)$rsp, (int64_t)vuln, (int64_t)(*(void**)$RSP - vuln) }
p { (int64_t)*(void**)$rsp, (int64_t)vuln, (int64_t)(*(void**)$rsp - vuln) }
p { (int64_t) *(void**)$rsp, (int64_t) vuln, (int64_t) (*(void**)$rsp - vuln) }
p { (int64_t) *(void**)$rsp,  (int64_t) vuln,  (int64_t) (*(void**)$rsp - vuln) }
p { (int64_t)*(void**)$rsp,  (int64_t)vuln,  (int64_t)(*(void**)$rsp - vuln) }
p { (int64_t)*(void**)$rsp,  (int64_t)spawn_shell,  (int64_t)(*(void**)$rsp - spawn_shell) }
p { (int64_t)*(void**)$rsp,  (int64_t)spawn_shell,  (*(void**)$rsp - spawn_shell) }
p { (int64_t)*(void**)$rsp,  spawn_shell,  (*(void**)$rsp - spawn_shell) }
p { *(void**)$rsp,  spawn_shell,  (*(void**)$rsp - spawn_shell) }
p { *(void**)$rsp,  spawn_shell,  (int64_t)(*(void**)$rsp - spawn_shell) }
p { (int64_t)*(void**)$rsp,  spawn_shell,  (*(void**)$rsp - spawn_shell) }
p { (int64_t)*(void**)$rsp,  (int64_t)spawn_shell,  (*(void**)$rsp - spawn_shell) }
p { *(int64_t**)$rsp,  (int64_t)spawn_shell,  (*(void**)$rsp - spawn_shell) }
p { *(int64_t**)$rsp,  (int64_t)spawn_shell,  (*(int64_t**)$rsp - spawn_shell) }
p { *(int64_t**)$rsp,  (int64_t*)spawn_shell,  (*(int64_t**)$rsp - spawn_shell) }
p { (int64_t*)$rsp,  (int64_t*)spawn_shell,  (*(int64_t**)$rsp - spawn_shell) }
p { *(int64_t*)$rsp,  (int64_t*)spawn_shell,  (*(int64_t**)$rsp - spawn_shell) }
p { *(int64_t**)$rsp,  (int64_t)spawn_shell,  (*(void**)$rsp - spawn_shell) }
p { *(int64_t*)$rsp,  (int64_t)spawn_shell,  (*(void**)$rsp - spawn_shell) }
p { *(int64_t*)$rsp,  (int64_t)spawn_shell,  (*(int64_t*)$rsp - spawn_shell) }
p { *(int64_t*)$rsp,  (int64_t)spawn_shell,  (*(int64_t*)$rsp - (int64_t)spawn_shell) }
p { *(int64_t*)$rsp,  (int64_t)spawn_shell,  *(int64_t*)$rsp - (int64_t)spawn_shell }
kill
run
p { *(int64_t*)$rsp,  (int64_t)spawn_shell,  *(int64_t*)$rsp - (int64_t)spawn_shell }
kill
run
p { *(int64_t*)$rsp,  (int64_t)spawn_shell,  *(int64_t*)$rsp - (int64_t)spawn_shell }
kill
run
p { *(int64_t*)$rsp,  (int64_t)spawn_shell,  *(int64_t*)$rsp - (int64_t)spawn_shell }
kill
run
p { *(int64_t*)$rsp,  (int64_t)spawn_shell,  *(int64_t*)$rsp - (int64_t)spawn_shell }
kill
run
p { *(int64_t*)$rsp,  (int64_t)spawn_shell,  *(int64_t*)$rsp - (int64_t)spawn_shell }
kill
leave
help
disass vuln
break *0x0000562be7c7d225
continue
step
next
ntext
ntext
next
next
next
next
break
next
disass main
disass spawn_shell
continue
info b
source peda-session-task01.txt 
ls -al
run
p { *(int64_t*)$rsp,  (int64_t)spawn_shell,  *(int64_t*)$rsp - (int64_t)spawn_shell }
quit
